getgenv().Items = {
    "Diamond",
    "Gold Coin",
    "Mysterious Arrow",
    "Pure Rokakaka",
    "Rokakaka",
    "Stone Mask",
    "Rib Cage of The Saint's Corpse",
    "Steel Ball",
    "Ancient Scroll",
    "Dio's Diary",
    "Caesar's Headband",
    "Quinton's Glove"
    --Dont add lucky arrow
}

getgenv().AutoFarm = true
getgenv().PickupDelay = 1
getgenv().MaxTeleportDistance = 45
getgenv().TeleportSpeed = 9
getgenv().Webhook = "https://discord.com/api/webhooks/1307992854051815426/Xku5bvRsM1SArQB8i2pT1gFYdSjWlAhhmX1M12o_Ap1j5aP2t1thBjaBguolzXp_uwI4"

local Player = game:GetService("Players")
local Local = Player.LocalPlayer
local Char = Local.Character
local Back = Local.Backpack
local Gui = Local.PlayerGui
local HumanoidRootPart = Char:FindFirstChild("HumanoidRootPart")
local RemoteEvent = Char.RemoteEvent
local Mag;
local Hook;
repeat task.wait() until Char:FindFirstChild("RemoteEvent") and Char:FindFirstChild("RemoteFunction")
Char:FindFirstChild("RemoteEvent"):FireServer("PressedPlay")
local Notify = loadstring(game:HttpGet("https://raw.githubusercontent.com/IceMinisterq/Notification-Library/Main/Library.lua"))()
for _,__ in ipairs({"LoadingScreen1", "LoadingScreen"}) do
    if Gui:FindFirstChild(__) then
        Gui:FindFirstChild(__):Destroy()
    end
end

task.spawn(function()
    if game.Lighting:WaitForChild("DepthOfField", 10) then
        game.Lighting.DepthOfField:Destroy()
    end
end)

if not Gui:FindFirstChild("HUD") then
    game:GetService("ReplicatedStorage").Objects.HUD:Clone().Parent = Gui
end

workspace.Map.IMPORTANT.OceanFloor.OceanFloor_Sand_6.Size = Vector3.new(2048, 89, 2048)
workspace.Map.IMPORTANT.OceanFloor.OceanFloor_Sand_4.Size = Vector3.new(2048, 89, 2048)
local Data = {
    ["data"] = {
        ["Time"] = tick(),
        ["Money"] = Local.PlayerStats.Money.Value,
    },
    ["Cache"] = {
        ["CFrame"] = nil,
        ["Loop"] = nil,
        ["Name"] = nil,
    },
    ["Value"] = {
        ["Count"] = 0
    }
}

local SendWebhook = function(msg)
    local url = getgenv().Webhook
    local data = {
        embeds = {
            {
                title = "Testing Webhook {Seth}",
                description = msg,
                type = "rich",
                color = 0x7269ff
            }
        }
    }
    local body = game:GetService("HttpService"):JSONEncode(data)
    local headers = {["Content-Type"] = "application/json"}
    local req = http_request or request or HttpPost or syn.request or http.request
    local reqbody = {
        Url = url,
        Body = body,
        Method = "POST",
        Headers = headers
    }
    req(reqbody)
end

Mag = hookfunction(getrawmetatable(HumanoidRootPart.Position).__index, function(p,i)
    if getcallingscript().Name == "ItemSpawn" and i:lower() == "magnitude" then
        return 0
    end
    return Mag(p,i)
end)

Hook = hookmetamethod(game, '__namecall', newcclosure(function(self, ...)
    local args = {...}
    if getnamecallmethod() == "InvokeServer" then
        if args[1] == "idklolbrah2de" then
            return "  ___XP DE KEY"
        end
    end

    return Hook(self, ...)
end))

Notify:SendNotification("Success", "Bypassed Hook", 1)
SendWebhook("Loading - Auto Money Farm {By Seth}\nCurrent Money: `"..math.floor(Data["data"]["Money"]).."`\nTime Since Start: `" .. math.floor((tick() - Data["data"]["Time"]) / 60) .. " minutes`")

local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local TPReturner = function()
    local Site;
    if foundAnything == "" then
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=' .. getgenv().Sort .. '&limit=100'))
    else
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=' .. getgenv().Sort .. '&limit=100&cursor=' .. foundAnything))
    end

    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
       foundAnything = Site.nextPageCursor
    end

    local num = 0;
    for _,v in pairs(Site.data) do
       local Possible = true
       ID = tostring(v.id)
       if tonumber(v.maxPlayers) > tonumber(v.playing) then
          for _,Existing in pairs(AllIDs) do
             if num ~= 0 then
                if ID == tostring(Existing) then
                   Possible = false
                end
             else
                if tonumber(actualHour) ~= tonumber(Existing) then
                   local delFile = pcall(function()
                   delfile("Blocker.json")
                   AllIDs = {}
                   table.insert(AllIDs, actualHour)
                   end)
                end
             end
             num = num + 1
          end
          if Possible == true then
             table.insert(AllIDs, ID)
             task.wait()
             pcall(function()
                writefile("Blocker.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                task.wait()
                game:GetService("TeleportService"):FarmInstance(PlaceID, ID, game.Players.LocalPlayer)
             end)
             task.wait(4)
          end
       end
    end
 end

local Teleport = function()
   SendWebhook("Time: " .. math.floor((tick() - Data["data"]["Time"]) / 60) .. " minutes\nCurrent Money: " .. math.floor(Data["data"]["Money"]))
   while task.wait() do
      pcall(function()
       if getgenv().Lessping then
        game:GetService("TeleportService"):Teleport(2809202155, game:GetService("Players").LocalPlayer)
        
        game:GetService("TeleportService").TeleportInitFailed:Connect(function()
            game:GetService("TeleportService"):Teleport(2809202155, game:GetService("Players").LocalPlayer)
        end)
           repeat task.wait() until game.JobId ~= game.JobId
       end
      TPReturner()
      if foundAnything ~= "" then
         TPReturner()
      end
      end)
   end
end

local Farm = function(bod)
    Data["Cache"]["Loop"] = game:GetService("RunService").Heartbeat:Connect(function()
        if not Data["Cache"]["CFrame"] then return end

        for _, v in pairs(Char:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide then
                v.CanCollide = false
            end
        end

        HumanoidRootPart.CFrame = Data["Cache"]["CFrame"]
    end)

    while (bod.Position - HumanoidRootPart.Position).Magnitude > getgenv().MaxTeleportDistance do
        HumanoidRootPart.Position = HumanoidRootPart.Position + (bod.Position - HumanoidRootPart.Position).Unit * getgenv().MaxTeleportDistance
        Data["Cache"]["CFrame"] = CFrame.new(HumanoidRootPart.Position)
        task.wait(10 / (getgenv().TeleportSpeed * 10))
    end

    Data["Cache"]["CFrame"] = bod
    task.wait()

    Data["Cache"]["Loop"]:Disconnect()
    task.wait()
end

local BackpackLoaded = function()
    local newtick = tick()
    local oldval = #Back:GetChildren()

    while true do 
        task.wait()

        if tick() - newtick >= 0.1 and #Back:GetChildren() == oldval then
            break
        elseif #Back:GetChildren() ~= oldval then
            oldval = #Back:GetChildren()
            newtick = tick()
        end
    end

    return
end

local Count = function(_)
    BackpackLoaded()

    for z,__ in Back:GetChildren() do
        if __.Name == _ then
            Data["Value"]["Count"] = Data["Value"]["Count"] + 1
        end
    end

    if Char and Char:FindFirstChildWhichIsA("Tool") and Char:FindFirstChildWhichIsA("Tool").Name == _ then
        Data["Value"]["Count"] += 1
    end

    return Data["Value"]["Count"]
end

local IsMax = function(_) 
    local Max = {
        ["Diamond"] = 30,
        ["Gold Coin"] = 45,
        ["Mysterious Arrow"] = 25,
        ["Pure Rokakaka"] = 10,
        ["Rokakaka"] = 25,
        ["Stone Mask"] = 10,
        ["Rib Cage of The Saint's Corpse"] = 10,
        ["Steel Ball"] = 10,
        ["Ancient Scroll"] = 10,
        ["Dio's Diary"] = 10,
        ["Caesar's Headband"] = 10,
        ["Red Candy"] = 50,
        ["Blue Candy"] = 50,
        ["Green Candy"] = 50,
        ["Yellow Candy"] = 50,
        ["Quinton's Glove"] = 10
    }

    return Count(_) >= Max[_]
end

local Find = function()
    for z,__ in pairs(workspace.Item_Spawns.Items:GetChildren()) do
        if not __:FindFirstChild("MeshPart") or not __:FindFirstChild("ProximityPrompt") then continue end
        if __:FindFirstChild("ProximityPrompt").MaxActivationDistance ~= 8 then continue end 
        if not table.find(getgenv().Items, __:FindFirstChild("ProximityPrompt").ObjectText) then continue end
        return {
            ["Text"] = __:FindFirstChild("ProximityPrompt").ObjectText,
            ["ProximityPrompt"] = __:FindFirstChild("ProximityPrompt"),
            ["CFrame"] = __:FindFirstChild("MeshPart").CFrame,
            ["Instance"] = __
        }
    end
end

local ItemChecker = function()
    for _,c in pairs(workspace.Item_Spawns.Items:GetChildren()) do
        if not c:IsA("Model") then
            Teleport()
        end
    end
end

hookfunction(workspace.Raycast, function()
    return
end)

if getgenv().AutoFarm then  
    while getgenv().AutoFarm do
        task.wait()
        if not Find() then continue end
        Data["Cache"]["Name"] = Find()["Text"]
        ITemChecker()
        if IsMax(Data["Cache"]["Name"]) then
            Char.Humanoid:EquipTool(Back:FindFirstChild(Data["Cache"]["Name"]))
            RemoteEvent:FireServer("EndDialogue", {["NPC"] = "Merchant",["Dialogue"] = "Dialogue5",["Option"] = "Option2"})
        end
        
        if not Find() then Farm(CFrame.new(math.random(-1000, 1000), 10, math.random(-1000, 1000))); continue end
        if not Char:FindFirstChild("FocusCam") then
            local FocusCam = Instance.new("ObjectValue", Char)
            FocusCam.Name = "FocusCam"
            FocusCam.Value = Find()
        end
        
        if Char:FindFirstChild("FocusCam") and Char.FocusCam.Value ~= Find() then
            Char.FocusCam.Value = Find()
        end
        Farm(Find().CFrame + Vector3.new(0, 10, 0))

        if (HumanoidRootPart.Position - Find().CFrame.Position).Magnitude <= 8 then
            task.wait(getgenv().PickupDelay)
            fireproximityprompt(Find().ProximityPrompt)
            task.wait(getgenv().PickupDelay)
            Find().Instance:Destroy()
        end
    end
else
    Teleport()
end
